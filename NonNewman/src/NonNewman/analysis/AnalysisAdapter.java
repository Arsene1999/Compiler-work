/* This file was generated by SableCC (http://www.sablecc.org/). */

package NonNewman.analysis;

import java.util.*;
import NonNewman.node.*;

public class AnalysisAdapter implements Analysis
{
    private Hashtable in;
    private Hashtable out;

    public Object getIn(Node node)
    {
        if(in == null)
        {
            return null;
        }

        return in.get(node);
    }

    public void setIn(Node node, Object in)
    {
        if(this.in == null)
        {
            this.in = new Hashtable(1);
        }

        if(in != null)
        {
            this.in.put(node, in);
        }
        else
        {
            this.in.remove(node);
        }
    }

    public Object getOut(Node node)
    {
        if(out == null)
        {
            return null;
        }

        return out.get(node);
    }

    public void setOut(Node node, Object out)
    {
        if(this.out == null)
        {
            this.out = new Hashtable(1);
        }

        if(out != null)
        {
            this.out.put(node, out);
        }
        else
        {
            this.out.remove(node);
        }
    }

    public void caseTEntrada(TEntrada node)
    {
        defaultCase(node);
    }

    public void caseTCallFunc(TCallFunc node)
    {
        defaultCase(node);
    }

    public void caseTLambda(TLambda node)
    {
        defaultCase(node);
    }

    public void caseTTipo(TTipo node)
    {
        defaultCase(node);
    }

    public void caseTCondLog(TCondLog node)
    {
        defaultCase(node);
    }

    public void caseTCondSint(TCondSint node)
    {
        defaultCase(node);
    }

    public void caseTSoma(TSoma node)
    {
        defaultCase(node);
    }

    public void caseTSubt(TSubt node)
    {
        defaultCase(node);
    }

    public void caseTMult(TMult node)
    {
        defaultCase(node);
    }

    public void caseTDiv(TDiv node)
    {
        defaultCase(node);
    }

    public void caseTMod(TMod node)
    {
        defaultCase(node);
    }

    public void caseTAtribuidor(TAtribuidor node)
    {
        defaultCase(node);
    }

    public void caseTMenor(TMenor node)
    {
        defaultCase(node);
    }

    public void caseTMaior(TMaior node)
    {
        defaultCase(node);
    }

    public void caseTParEsq(TParEsq node)
    {
        defaultCase(node);
    }

    public void caseTParDir(TParDir node)
    {
        defaultCase(node);
    }

    public void caseTLbracket(TLbracket node)
    {
        defaultCase(node);
    }

    public void caseTRbracket(TRbracket node)
    {
        defaultCase(node);
    }

    public void caseTComa(TComa node)
    {
        defaultCase(node);
    }

    public void caseTDoisPontos(TDoisPontos node)
    {
        defaultCase(node);
    }

    public void caseTNumero(TNumero node)
    {
        defaultCase(node);
    }

    public void caseTVazio(TVazio node)
    {
        defaultCase(node);
    }

    public void caseEOF(EOF node)
    {
        defaultCase(node);
    }

    public void defaultCase(Node node)
    {
    }
}
